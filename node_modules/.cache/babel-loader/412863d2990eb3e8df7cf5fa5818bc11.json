{"ast":null,"code":"var _jsxFileName = \"/Users/jason/Workspace/api-proofs/api-proofs/src/components/EventbriteInfo.jsx\";\nimport React, { Component } from 'react';\nvar eventArray = [];\nvar query_1 = \"https://app.ticketmaster.com/discovery/v2/events.json?classificationName=music&dmaId=343&apikey=W1pcXuKqQdPy3aAzokBdFdcfQYOtx8Zb\";\nvar eventbrite_query_1 = \"https://www.eventbriteapi.com/v3/events/search/?sort_by=date&location.latitude=36.162663&location.longitude=-86.781601&token=\".concat(token, \"&expand=venue\");\nexport class EventbriteInfo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      eventList: []\n    };\n\n    this.getTicketMasterConcertInfo = () => {\n      fetch(query_1).then(results => results.json()).then(allConcerts => {\n        allConcerts._embedded.events.forEach(concert => {\n          console.log(concert);\n          let INPUT_OBJ = {\n            type: \"\",\n            name: \"\",\n            location: \"\",\n            details: \"\"\n          };\n          INPUT_OBJ.type = \"Concerts\";\n          INPUT_OBJ.name = concert.name;\n          INPUT_OBJ.location = concert._embedded.venues[0].name;\n          INPUT_OBJ.details = concert.classifications[0].genre.name;\n          eventArray.push(INPUT_OBJ);\n        });\n\n        this.setState({\n          eventList: eventArray\n        });\n      }); // console.log(INPUT_OBJ)\n    };\n  }\n\n  componentDidMount() {\n    this.getTicketmasterConcertInfo();\n  }\n\n  render() {\n    // console.log(\"Event List in State :\", this.state.eventList)\n    return React.createElement(React.Fragment, null, this.state.eventList.map((event, i) => {\n      return React.createElement(\"ul\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        key: event.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, event.name), React.createElement(\"p\", {\n        key: event.location,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, event.location), React.createElement(\"p\", {\n        key: event.type,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, event.type), React.createElement(\"p\", {\n        key: event.details,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, event.details));\n    }));\n  }\n\n}\nexport default EventbriteInfo;","map":{"version":3,"sources":["/Users/jason/Workspace/api-proofs/api-proofs/src/components/EventbriteInfo.jsx"],"names":["React","Component","eventArray","query_1","eventbrite_query_1","token","EventbriteInfo","state","eventList","getTicketMasterConcertInfo","fetch","then","results","json","allConcerts","_embedded","events","forEach","concert","console","log","INPUT_OBJ","type","name","location","details","venues","classifications","genre","push","setState","componentDidMount","getTicketmasterConcertInfo","render","map","event","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,IAAIC,UAAU,GAAG,EAAjB;AAEA,IAAIC,OAAO,GAAG,kIAAd;AAEA,IAAIC,kBAAkB,0IAAmIC,KAAnI,kBAAtB;AAEA,OAAO,MAAMC,cAAN,SAA6BL,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAE1CM,KAF0C,GAElC;AACJC,MAAAA,SAAS,EAAG;AADR,KAFkC;;AAAA,SAO1CC,0BAP0C,GAOb,MAAM;AAC/BC,MAAAA,KAAK,CAACP,OAAD,CAAL,CACKQ,IADL,CACUC,OAAO,IAAIA,OAAO,CAACC,IAAR,EADrB,EAEKF,IAFL,CAEUG,WAAW,IAAI;AACjBA,QAAAA,WAAW,CAACC,SAAZ,CAAsBC,MAAtB,CAA6BC,OAA7B,CAAqCC,OAAO,IAAI;AAC5CC,UAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AAGA,cAAIG,SAAS,GAAG;AACZC,YAAAA,IAAI,EAAE,EADM;AAEZC,YAAAA,IAAI,EAAE,EAFM;AAGZC,YAAAA,QAAQ,EAAE,EAHE;AAIZC,YAAAA,OAAO,EAAE;AAJG,WAAhB;AAMAJ,UAAAA,SAAS,CAACC,IAAV,GAAiB,UAAjB;AACAD,UAAAA,SAAS,CAACE,IAAV,GAAiBL,OAAO,CAACK,IAAzB;AACAF,UAAAA,SAAS,CAACG,QAAV,GAAqBN,OAAO,CAACH,SAAR,CAAkBW,MAAlB,CAAyB,CAAzB,EAA4BH,IAAjD;AACAF,UAAAA,SAAS,CAACI,OAAV,GAAoBP,OAAO,CAACS,eAAR,CAAwB,CAAxB,EAA2BC,KAA3B,CAAiCL,IAArD;AAEArB,UAAAA,UAAU,CAAC2B,IAAX,CAAgBR,SAAhB;AACH,SAhBD;;AAiBA,aAAKS,QAAL,CAAc;AAAEtB,UAAAA,SAAS,EAAGN;AAAd,SAAd;AACH,OArBL,EAD+B,CAuB/B;AACH,KA/ByC;AAAA;;AAgC1C6B,EAAAA,iBAAiB,GAAE;AACf,SAAKC,0BAAL;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL;AAEA,WAEI,0CACK,KAAK1B,KAAL,CAAWC,SAAX,CAAqB0B,GAArB,CAAyB,CAACC,KAAD,EAAQC,CAAR,KAAa;AACnC,aACI;AAAI,QAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,GAAG,EAAED,KAAK,CAACZ,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsBY,KAAK,CAACZ,IAA5B,CADJ,EAEI;AAAG,QAAA,GAAG,EAAEY,KAAK,CAACX,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyBW,KAAK,CAACX,QAA/B,CAFJ,EAGI;AAAG,QAAA,GAAG,EAAEW,KAAK,CAACb,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqBa,KAAK,CAACb,IAA3B,CAHJ,EAII;AAAG,QAAA,GAAG,EAAEa,KAAK,CAACV,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwBU,KAAK,CAACV,OAA9B,CAJJ,CADJ;AAQH,KATA,CADL,CAFJ;AAeH;;AAtDyC;AAyD9C,eAAenB,cAAf","sourcesContent":["import React, { Component } from 'react';\n\nvar eventArray = []\n\nvar query_1 = \"https://app.ticketmaster.com/discovery/v2/events.json?classificationName=music&dmaId=343&apikey=W1pcXuKqQdPy3aAzokBdFdcfQYOtx8Zb\";\n\nvar eventbrite_query_1 = `https://www.eventbriteapi.com/v3/events/search/?sort_by=date&location.latitude=36.162663&location.longitude=-86.781601&token=${token}&expand=venue`\n\nexport class EventbriteInfo extends Component {\n\n    state = {\n        eventList : []\n    };\n\n    \n    getTicketMasterConcertInfo = () => {\n        fetch(query_1)\n            .then(results => results.json())\n            .then(allConcerts => {\n                allConcerts._embedded.events.forEach(concert => {\n                    console.log(concert)\n\n\n                    let INPUT_OBJ = {\n                        type: \"\",\n                        name: \"\",\n                        location: \"\",\n                        details: \"\"\n                    }\n                    INPUT_OBJ.type = \"Concerts\";\n                    INPUT_OBJ.name = concert.name;\n                    INPUT_OBJ.location = concert._embedded.venues[0].name;\n                    INPUT_OBJ.details = concert.classifications[0].genre.name;\n\n                    eventArray.push(INPUT_OBJ)\n                })\n                this.setState({ eventList : eventArray})\n            })\n        // console.log(INPUT_OBJ)\n    }\n    componentDidMount(){\n        this.getTicketmasterConcertInfo();\n    }\n\n    render() {\n        // console.log(\"Event List in State :\", this.state.eventList)\n\n        return (\n\n            <>\n                {this.state.eventList.map((event, i)=> {\n                    return (\n                        <ul key={i}>\n                            <h4 key={event.name}>{event.name}</h4>\n                            <p key={event.location}>{event.location}</p>\n                            <p key={event.type}>{event.type}</p>\n                            <p key={event.details}>{event.details}</p>\n                        </ul>\n                    )\n                })}\n            </>\n        );\n    }\n}\n\nexport default EventbriteInfo;\n"]},"metadata":{},"sourceType":"module"}