{"ast":null,"code":"var _jsxFileName = \"/Users/jason/Workspace/api-proofs/api-proofs/src/components/EventbriteInfo.jsx\";\nimport React, { Component } from 'react';\nvar eventArray = [];\nexport class EventbriteInfo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      eventList: []\n    };\n\n    this.getConcertInfo = () => {\n      fetch(\"https://app.ticketmaster.com/discovery/v2/events.json?classificationName=music&dmaId=343&apikey=W1pcXuKqQdPy3aAzokBdFdcfQYOtx8Zb\").then(results => results.json()).then(allConcerts => {\n        allConcerts._embedded.events.forEach(concert => {\n          //console.log(concert)\n          let INPUT_OBJ = {\n            type: \"\",\n            name: \"\",\n            location: \"\",\n            details: \"\"\n          };\n          INPUT_OBJ.type = \"Concerts\";\n          INPUT_OBJ.name = concert.name;\n          INPUT_OBJ.location = concert._embedded.venues[0].name;\n          INPUT_OBJ.details = \"Genre : \".concat(concert.classifications[0].genre.name);\n          eventArray.push(INPUT_OBJ);\n        });\n\n        this.setState({\n          eventList: eventArray\n        });\n      }); // console.log(INPUT_OBJ)\n    };\n  }\n\n  componentDidMount() {\n    this.getConcertInfo();\n  }\n\n  render() {\n    console.log(\"Event List in State :\", this.state.eventList);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    });\n  }\n\n}\nexport default EventbriteInfo;","map":{"version":3,"sources":["/Users/jason/Workspace/api-proofs/api-proofs/src/components/EventbriteInfo.jsx"],"names":["React","Component","eventArray","EventbriteInfo","state","eventList","getConcertInfo","fetch","then","results","json","allConcerts","_embedded","events","forEach","concert","INPUT_OBJ","type","name","location","details","venues","classifications","genre","push","setState","componentDidMount","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,IAAIC,UAAU,GAAG,EAAjB;AAEA,OAAO,MAAMC,cAAN,SAA6BF,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAE1CG,KAF0C,GAElC;AACJC,MAAAA,SAAS,EAAG;AADR,KAFkC;;AAAA,SAO1CC,cAP0C,GAOzB,MAAM;AACnBC,MAAAA,KAAK,CAAC,kIAAD,CAAL,CACKC,IADL,CACUC,OAAO,IAAIA,OAAO,CAACC,IAAR,EADrB,EAEKF,IAFL,CAEUG,WAAW,IAAI;AACjBA,QAAAA,WAAW,CAACC,SAAZ,CAAsBC,MAAtB,CAA6BC,OAA7B,CAAqCC,OAAO,IAAI;AAC5C;AAEA,cAAIC,SAAS,GAAG;AACZC,YAAAA,IAAI,EAAE,EADM;AAEZC,YAAAA,IAAI,EAAE,EAFM;AAGZC,YAAAA,QAAQ,EAAE,EAHE;AAIZC,YAAAA,OAAO,EAAE;AAJG,WAAhB;AAMAJ,UAAAA,SAAS,CAACC,IAAV,GAAiB,UAAjB;AACAD,UAAAA,SAAS,CAACE,IAAV,GAAiBH,OAAO,CAACG,IAAzB;AACAF,UAAAA,SAAS,CAACG,QAAV,GAAqBJ,OAAO,CAACH,SAAR,CAAkBS,MAAlB,CAAyB,CAAzB,EAA4BH,IAAjD;AACAF,UAAAA,SAAS,CAACI,OAAV,qBAA+BL,OAAO,CAACO,eAAR,CAAwB,CAAxB,EAA2BC,KAA3B,CAAiCL,IAAhE;AAEAhB,UAAAA,UAAU,CAACsB,IAAX,CAAgBR,SAAhB;AACH,SAfD;;AAgBA,aAAKS,QAAL,CAAc;AAAEpB,UAAAA,SAAS,EAAGH;AAAd,SAAd;AACH,OApBL,EADmB,CAsBnB;AACH,KA9ByC;AAAA;;AA+B1CwB,EAAAA,iBAAiB,GAAE;AACf,SAAKpB,cAAL;AACH;;AAEDqB,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqC,KAAKzB,KAAL,CAAWC,SAAhD;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAKH;;AA3CyC;AA8C9C,eAAeF,cAAf","sourcesContent":["import React, { Component } from 'react';\n\nvar eventArray = []\n\nexport class EventbriteInfo extends Component {\n\n    state = {\n        eventList : []\n    };\n\n    \n    getConcertInfo = () => {\n        fetch(\"https://app.ticketmaster.com/discovery/v2/events.json?classificationName=music&dmaId=343&apikey=W1pcXuKqQdPy3aAzokBdFdcfQYOtx8Zb\")\n            .then(results => results.json())\n            .then(allConcerts => {\n                allConcerts._embedded.events.forEach(concert => {\n                    //console.log(concert)\n\n                    let INPUT_OBJ = {\n                        type: \"\",\n                        name: \"\",\n                        location: \"\",\n                        details: \"\"\n                    }\n                    INPUT_OBJ.type = \"Concerts\";\n                    INPUT_OBJ.name = concert.name;\n                    INPUT_OBJ.location = concert._embedded.venues[0].name;\n                    INPUT_OBJ.details = `Genre : ${concert.classifications[0].genre.name}`;\n\n                    eventArray.push(INPUT_OBJ)\n                })\n                this.setState({ eventList : eventArray})\n            })\n        // console.log(INPUT_OBJ)\n    }\n    componentDidMount(){\n        this.getConcertInfo();\n    }\n\n    render() {\n        console.log(\"Event List in State :\", this.state.eventList)\n\n        return (\n            <div>\n\n            </div>\n        );\n    }\n}\n\nexport default EventbriteInfo;\n"]},"metadata":{},"sourceType":"module"}